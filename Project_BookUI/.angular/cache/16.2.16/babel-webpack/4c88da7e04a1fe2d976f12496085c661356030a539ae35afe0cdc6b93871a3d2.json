{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BookService {\n  constructor(http) {\n    this.http = http;\n    this.url = \"http://localhost:8081/Book/\";\n  }\n  save(form) {\n    return this.http.post(this.url + \"save\", form);\n  }\n  search(form, pageNo) {\n    return this.http.post(this.url + \"search/\" + pageNo, form);\n  }\n  get(id) {\n    return this.http.get(this.url + \"get/\" + id);\n  }\n  delete(id) {\n    return this.http.get(this.url + \"delete/\" + id);\n  }\n  uploadCover(id, file) {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    return this.http.post(this.url + \"cover/\" + id, formData);\n  }\n  static {\n    this.ɵfac = function BookService_Factory(t) {\n      return new (t || BookService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: BookService,\n      factory: BookService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BookService","constructor","http","url","save","form","post","search","pageNo","get","id","delete","uploadCover","file","formData","FormData","append","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\WorkSpace\\Project_Book\\Project_BookUI\\src\\app\\book.service.service.ts"],"sourcesContent":["// src/app/book.service.ts\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class BookService {\n\n  constructor(private http: HttpClient) { }\n\n  url = \"http://localhost:8081/Book/\";\n\n  save(form: any) {\n    return this.http.post(this.url + \"save\", form);\n  }\n\n  search(form: any, pageNo: number) {\n    return this.http.post(this.url + \"search/\" + pageNo, form);\n  }\n\n  get(id: number) {\n    return this.http.get(this.url + \"get/\" + id);\n  }\n\n  delete(id: number) {\n    return this.http.get(this.url + \"delete/\" + id);\n  }\n\n  uploadCover(id: number, file: File) {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    return this.http.post(this.url + \"cover/\" + id, formData);\n  }\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAExB,KAAAC,GAAG,GAAG,6BAA6B;EAFK;EAIxCC,IAAIA,CAACC,IAAS;IACZ,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,IAAI,CAACH,GAAG,GAAG,MAAM,EAAEE,IAAI,CAAC;EAChD;EAEAE,MAAMA,CAACF,IAAS,EAAEG,MAAc;IAC9B,OAAO,IAAI,CAACN,IAAI,CAACI,IAAI,CAAC,IAAI,CAACH,GAAG,GAAG,SAAS,GAAGK,MAAM,EAAEH,IAAI,CAAC;EAC5D;EAEAI,GAAGA,CAACC,EAAU;IACZ,OAAO,IAAI,CAACR,IAAI,CAACO,GAAG,CAAC,IAAI,CAACN,GAAG,GAAG,MAAM,GAAGO,EAAE,CAAC;EAC9C;EAEAC,MAAMA,CAACD,EAAU;IACf,OAAO,IAAI,CAACR,IAAI,CAACO,GAAG,CAAC,IAAI,CAACN,GAAG,GAAG,SAAS,GAAGO,EAAE,CAAC;EACjD;EAEAE,WAAWA,CAACF,EAAU,EAAEG,IAAU;IAChC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;IAC7B,OAAO,IAAI,CAACX,IAAI,CAACI,IAAI,CAAC,IAAI,CAACH,GAAG,GAAG,QAAQ,GAAGO,EAAE,EAAEI,QAAQ,CAAC;EAC3D;;;uBA1BWd,WAAW,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXpB,WAAW;MAAAqB,OAAA,EAAXrB,WAAW,CAAAsB,IAAA;MAAAC,UAAA,EADE;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}