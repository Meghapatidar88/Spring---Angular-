{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let BookComponent = class BookComponent {\n  constructor(http, route) {\n    this.http = http;\n    this.route = route;\n    this.form = {\n      id: null,\n      title: '',\n      author: '',\n      price: '',\n      publisher: '',\n      message: ''\n    };\n    this.fileToUpload = null;\n    this.route.params.subscribe(params => {\n      this.form.id = params['id'];\n      if (this.form.id) {\n        this.display();\n      }\n    });\n  }\n  ngOnInit() {}\n  display() {\n    this.http.get(`http://localhost:8081/Book/get/${this.form.id}`).subscribe(res => {\n      this.form = res.data || {};\n      this.form.message = '';\n    });\n  }\n  save() {\n    this.http.post('http://localhost:8081/Book/save', this.form).subscribe(res => {\n      this.form.message = res.result?.message || 'Saved successfully';\n      if (this.fileToUpload) {\n        this.uploadFile();\n      }\n    });\n  }\n  onFileSelect(event) {\n    this.fileToUpload = event.target.files.item(0);\n  }\n  uploadFile() {\n    const formData = new FormData();\n    formData.append('file', this.fileToUpload);\n    this.http.post(`http://localhost:8081/Book/uploadCover/${this.form.id}`, formData).subscribe(res => {\n      console.log('File uploaded:', res);\n    }, error => {\n      console.error('Upload failed', error);\n    });\n  }\n};\nBookComponent = __decorate([Component({\n  selector: 'app-book',\n  templateUrl: './book.component.html',\n  styleUrls: ['./book.component.css']\n})], BookComponent);","map":{"version":3,"names":["Component","BookComponent","constructor","http","route","form","id","title","author","price","publisher","message","fileToUpload","params","subscribe","display","ngOnInit","get","res","data","save","post","result","uploadFile","onFileSelect","event","target","files","item","formData","FormData","append","console","log","error","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\WorkSpace\\Project_Book\\Project_BookUI\\src\\app\\book\\book.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-book',\n  templateUrl: './book.component.html',\n  styleUrls: ['./book.component.css']\n})\nexport class BookComponent {\n\n  form: any = {\n    id: null,\n    title: '',\n    author: '',\n    price: '',\n    publisher: '',\n    message: ''\n  };\n\n  fileToUpload: any = null;\n\n  constructor(private http: HttpClient, private route: ActivatedRoute) {\n    this.route.params.subscribe(params => {\n      this.form.id = params['id'];\n      if (this.form.id) {\n        this.display();\n      }\n    });\n  }\n\n  ngOnInit(): void {}\n\n  display() {\n    this.http.get(`http://localhost:8081/Book/get/${this.form.id}`).subscribe((res: any) => {\n      this.form = res.data || {};\n      this.form.message = '';\n    });\n  }\n\n  save() {\n    this.http.post('http://localhost:8081/Book/save', this.form).subscribe((res: any) => {\n      this.form.message = res.result?.message || 'Saved successfully';\n      if (this.fileToUpload) {\n        this.uploadFile();\n      }\n    });\n  }\n\n  onFileSelect(event: any) {\n    this.fileToUpload = event.target.files.item(0);\n  }\n\n  uploadFile() {\n    const formData = new FormData();\n    formData.append('file', this.fileToUpload);\n\n    this.http.post(`http://localhost:8081/Book/uploadCover/${this.form.id}`, formData).subscribe(\n      (res: any) => {\n        console.log('File uploaded:', res);\n      },\n      error => {\n        console.error('Upload failed', error);\n      }\n    );\n  }\n}\n"],"mappings":";AACA,SAASA,SAAS,QAAQ,eAAe;AAQlC,WAAMC,aAAa,GAAnB,MAAMA,aAAa;EAaxBC,YAAoBC,IAAgB,EAAUC,KAAqB;IAA/C,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,KAAK,GAALA,KAAK;IAXnD,KAAAC,IAAI,GAAQ;MACVC,EAAE,EAAE,IAAI;MACRC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE,EAAE;MACVC,KAAK,EAAE,EAAE;MACTC,SAAS,EAAE,EAAE;MACbC,OAAO,EAAE;KACV;IAED,KAAAC,YAAY,GAAQ,IAAI;IAGtB,IAAI,CAACR,KAAK,CAACS,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;MACnC,IAAI,CAACR,IAAI,CAACC,EAAE,GAAGO,MAAM,CAAC,IAAI,CAAC;MAC3B,IAAI,IAAI,CAACR,IAAI,CAACC,EAAE,EAAE;QAChB,IAAI,CAACS,OAAO,EAAE;;IAElB,CAAC,CAAC;EACJ;EAEAC,QAAQA,CAAA,GAAU;EAElBD,OAAOA,CAAA;IACL,IAAI,CAACZ,IAAI,CAACc,GAAG,CAAC,kCAAkC,IAAI,CAACZ,IAAI,CAACC,EAAE,EAAE,CAAC,CAACQ,SAAS,CAAEI,GAAQ,IAAI;MACrF,IAAI,CAACb,IAAI,GAAGa,GAAG,CAACC,IAAI,IAAI,EAAE;MAC1B,IAAI,CAACd,IAAI,CAACM,OAAO,GAAG,EAAE;IACxB,CAAC,CAAC;EACJ;EAEAS,IAAIA,CAAA;IACF,IAAI,CAACjB,IAAI,CAACkB,IAAI,CAAC,iCAAiC,EAAE,IAAI,CAAChB,IAAI,CAAC,CAACS,SAAS,CAAEI,GAAQ,IAAI;MAClF,IAAI,CAACb,IAAI,CAACM,OAAO,GAAGO,GAAG,CAACI,MAAM,EAAEX,OAAO,IAAI,oBAAoB;MAC/D,IAAI,IAAI,CAACC,YAAY,EAAE;QACrB,IAAI,CAACW,UAAU,EAAE;;IAErB,CAAC,CAAC;EACJ;EAEAC,YAAYA,CAACC,KAAU;IACrB,IAAI,CAACb,YAAY,GAAGa,KAAK,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;EAChD;EAEAL,UAAUA,CAAA;IACR,MAAMM,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACnB,YAAY,CAAC;IAE1C,IAAI,CAACT,IAAI,CAACkB,IAAI,CAAC,0CAA0C,IAAI,CAAChB,IAAI,CAACC,EAAE,EAAE,EAAEuB,QAAQ,CAAC,CAACf,SAAS,CACzFI,GAAQ,IAAI;MACXc,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEf,GAAG,CAAC;IACpC,CAAC,EACDgB,KAAK,IAAG;MACNF,OAAO,CAACE,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACvC,CAAC,CACF;EACH;CACD;AAzDYjC,aAAa,GAAAkC,UAAA,EALzBnC,SAAS,CAAC;EACToC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACWrC,aAAa,CAyDzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}